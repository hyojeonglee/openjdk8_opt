/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class sun_awt_X11_XlibWrapper */

#ifndef _Included_sun_awt_X11_XlibWrapper
#define _Included_sun_awt_X11_XlibWrapper
#ifdef __cplusplus
extern "C" {
#endif
#undef sun_awt_X11_XlibWrapper_MAXSIZE
#define sun_awt_X11_XlibWrapper_MAXSIZE 32767L
#undef sun_awt_X11_XlibWrapper_MINSIZE
#define sun_awt_X11_XlibWrapper_MINSIZE 1L
/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XFree
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XFree
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    memcpy
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_memcpy
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    getAddress
 * Signature: (Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_getAddress
  (JNIEnv *, jclass, jobject);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    copyIntArray
 * Signature: (JLjava/lang/Object;I)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_copyIntArray
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    copyLongArray
 * Signature: (JLjava/lang/Object;I)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_copyLongArray
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    getStringBytes
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_sun_awt_X11_XlibWrapper_getStringBytes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XOpenDisplay
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XOpenDisplay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XCloseDisplay
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XCloseDisplay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XDisplayString
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XDisplayString
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSetCloseDownMode
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XSetCloseDownMode
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    DefaultScreen
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_DefaultScreen
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    ScreenOfDisplay
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_ScreenOfDisplay
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    DoesBackingStore
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_DoesBackingStore
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    DisplayWidth
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_DisplayWidth
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    DisplayWidthMM
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_DisplayWidthMM
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    DisplayHeight
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_DisplayHeight
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    DisplayHeightMM
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_DisplayHeightMM
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    RootWindow
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_RootWindow
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    ScreenCount
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_ScreenCount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XCreateWindow
 * Signature: (JJIIIIIIJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XCreateWindow
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jint, jint, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XDestroyWindow
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XDestroyWindow
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XGrabPointer
 * Signature: (JJIIIIJJJ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XGrabPointer
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XUngrabPointer
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XUngrabPointer
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XGrabKeyboard
 * Signature: (JJIIIJ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XGrabKeyboard
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XUngrabKeyboard
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XUngrabKeyboard
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XGrabServer
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XGrabServer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XUngrabServer
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XUngrabServer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XMapWindow
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XMapWindow
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XMapRaised
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XMapRaised
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XRaiseWindow
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XRaiseWindow
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XLowerWindow
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XLowerWindow
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XRestackWindows
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XRestackWindows
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XConfigureWindow
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XConfigureWindow
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSetInputFocus
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XSetInputFocus
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSetInputFocus2
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XSetInputFocus2
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XGetInputFocus
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XGetInputFocus
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XUnmapWindow
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XUnmapWindow
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSelectInput
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XSelectInput
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XNextEvent
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XNextEvent
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XMaskEvent
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XMaskEvent
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XWindowEvent
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XWindowEvent
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XFilterEvent
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_X11_XlibWrapper_XFilterEvent
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSupportsLocale
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_X11_XlibWrapper_XSupportsLocale
  (JNIEnv *, jclass);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSetLocaleModifiers
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_sun_awt_X11_XlibWrapper_XSetLocaleModifiers
  (JNIEnv *, jclass, jstring);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XTranslateCoordinates
 * Signature: (JJJJJJJJ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XTranslateCoordinates
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XPeekEvent
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XPeekEvent
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XFlush
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XFlush
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSync
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XSync
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XMoveResizeWindow
 * Signature: (JJIIII)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XMoveResizeWindow
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XResizeWindow
 * Signature: (JJII)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XResizeWindow
  (JNIEnv *, jclass, jlong, jlong, jint, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XMoveWindow
 * Signature: (JJII)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XMoveWindow
  (JNIEnv *, jclass, jlong, jlong, jint, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XQueryPointer
 * Signature: (JJJJJJJJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_X11_XlibWrapper_XQueryPointer
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XFreeCursor
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XFreeCursor
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSetWindowBackground
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XSetWindowBackground
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XEventsQueued
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XEventsQueued
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XInternAtoms
 * Signature: (J[Ljava/lang/String;ZJ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XInternAtoms
  (JNIEnv *, jclass, jlong, jobjectArray, jboolean, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    SetProperty
 * Signature: (JJJLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_SetProperty
  (JNIEnv *, jclass, jlong, jlong, jlong, jstring);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    GetProperty
 * Signature: (JJJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_sun_awt_X11_XlibWrapper_GetProperty
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    InternAtom
 * Signature: (JLjava/lang/String;I)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_InternAtom
  (JNIEnv *, jclass, jlong, jstring, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XGetWindowProperty
 * Signature: (JJJJJJJJJJJJ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XGetWindowProperty
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XChangePropertyImpl
 * Signature: (JJJJIIJI)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XChangePropertyImpl
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jint, jint, jlong, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XChangePropertyS
 * Signature: (JJJJIILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XChangePropertyS
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jint, jint, jstring);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XDeleteProperty
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XDeleteProperty
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSetTransientFor
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XSetTransientFor
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSetWMHints
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XSetWMHints
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XGetWMHints
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XGetWMHints
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XAllocWMHints
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XAllocWMHints
  (JNIEnv *, jclass);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XGetPointerMapping
 * Signature: (JJI)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XGetPointerMapping
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XGetDefault
 * Signature: (JLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_sun_awt_X11_XlibWrapper_XGetDefault
  (JNIEnv *, jclass, jlong, jstring, jstring);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    getScreenOfWindow
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_getScreenOfWindow
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XScreenNumberOfScreen
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XScreenNumberOfScreen
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XIconifyWindow
 * Signature: (JJJ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XIconifyWindow
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    ServerVendor
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_sun_awt_X11_XlibWrapper_ServerVendor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    VendorRelease
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_VendorRelease
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    IsXsunKPBehavior
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_X11_XlibWrapper_IsXsunKPBehavior
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    IsSunKeyboard
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_X11_XlibWrapper_IsSunKeyboard
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    IsKanaKeyboard
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_X11_XlibWrapper_IsKanaKeyboard
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XBell
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XBell
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XCreateFontCursor
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XCreateFontCursor
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XCreateBitmapFromData
 * Signature: (JJJII)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XCreateBitmapFromData
  (JNIEnv *, jclass, jlong, jlong, jlong, jint, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XFreePixmap
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XFreePixmap
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XCreatePixmapCursor
 * Signature: (JJJJJII)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XCreatePixmapCursor
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jint, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XQueryBestCursor
 * Signature: (JJIIJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_X11_XlibWrapper_XQueryBestCursor
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XAllocColor
 * Signature: (JJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_X11_XlibWrapper_XAllocColor
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    SetToolkitErrorHandler
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_SetToolkitErrorHandler
  (JNIEnv *, jclass);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSetErrorHandler
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XSetErrorHandler
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    CallErrorHandler
 * Signature: (JJJ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_CallErrorHandler
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XChangeWindowAttributes
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XChangeWindowAttributes
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XGetWindowAttributes
 * Signature: (JJJ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XGetWindowAttributes
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XGetGeometry
 * Signature: (JJJJJJJJJ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XGetGeometry
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XGetWMNormalHints
 * Signature: (JJJJ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XGetWMNormalHints
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSetWMNormalHints
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XSetWMNormalHints
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSetMinMaxHints
 * Signature: (JJIIIIJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XSetMinMaxHints
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XAllocSizeHints
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XAllocSizeHints
  (JNIEnv *, jclass);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSendEvent
 * Signature: (JJZJJ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XSendEvent
  (JNIEnv *, jclass, jlong, jlong, jboolean, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XPutBackEvent
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XPutBackEvent
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XQueryTree
 * Signature: (JJJJJJ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XQueryTree
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XGetVisualInfo
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XGetVisualInfo
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XReparentWindow
 * Signature: (JJJII)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XReparentWindow
  (JNIEnv *, jclass, jlong, jlong, jlong, jint, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XConvertSelection
 * Signature: (JJJJJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XConvertSelection
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSetSelectionOwner
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XSetSelectionOwner
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XGetSelectionOwner
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XGetSelectionOwner
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XGetAtomName
 * Signature: (JJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_sun_awt_X11_XlibWrapper_XGetAtomName
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XMaxRequestSize
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XMaxRequestSize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XCreatePixmap
 * Signature: (JJIII)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XCreatePixmap
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XCreateImage
 * Signature: (JJIIIJIIII)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XCreateImage
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jlong, jint, jint, jint, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XDestroyImage
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XDestroyImage
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XPutImage
 * Signature: (JJJJIIIIII)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XPutImage
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jint, jint, jint, jint, jint, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XCreateGC
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XCreateGC
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XFreeGC
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XFreeGC
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSetWindowBackgroundPixmap
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XSetWindowBackgroundPixmap
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XClearWindow
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XClearWindow
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XGetIconSizes
 * Signature: (JJJJ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XGetIconSizes
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XdbeQueryExtension
 * Signature: (JJJ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XdbeQueryExtension
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XQueryExtension
 * Signature: (JLjava/lang/String;JJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_X11_XlibWrapper_XQueryExtension
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    IsKeypadKey
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_X11_XlibWrapper_IsKeypadKey
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XdbeAllocateBackBufferName
 * Signature: (JJI)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XdbeAllocateBackBufferName
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XdbeDeallocateBackBufferName
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XdbeDeallocateBackBufferName
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XdbeBeginIdiom
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XdbeBeginIdiom
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XdbeEndIdiom
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XdbeEndIdiom
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XdbeSwapBuffers
 * Signature: (JJI)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XdbeSwapBuffers
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XQueryKeymap
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XQueryKeymap
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XKeycodeToKeysym
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XKeycodeToKeysym
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XKeysymToKeycode
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XKeysymToKeycode
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XkbGetEffectiveGroup
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XkbGetEffectiveGroup
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XkbKeycodeToKeysym
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XkbKeycodeToKeysym
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XkbSelectEvents
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XkbSelectEvents
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XkbSelectEventDetails
 * Signature: (JJJJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XkbSelectEventDetails
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XkbQueryExtension
 * Signature: (JJJJJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_X11_XlibWrapper_XkbQueryExtension
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XkbLibraryVersion
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_X11_XlibWrapper_XkbLibraryVersion
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XkbGetMap
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XkbGetMap
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XkbGetUpdatedMap
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XkbGetUpdatedMap
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XkbFreeKeyboard
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XkbFreeKeyboard
  (JNIEnv *, jclass, jlong, jlong, jboolean);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XkbTranslateKeyCode
 * Signature: (JIJJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_X11_XlibWrapper_XkbTranslateKeyCode
  (JNIEnv *, jclass, jlong, jint, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XkbSetDetectableAutoRepeat
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XkbSetDetectableAutoRepeat
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XConvertCase
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XConvertCase
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XGetModifierMapping
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_sun_awt_X11_XlibWrapper_XGetModifierMapping
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XFreeModifiermap
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XFreeModifiermap
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XRefreshKeyboardMapping
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XRefreshKeyboardMapping
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XChangeActivePointerGrab
 * Signature: (JIJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_XChangeActivePointerGrab
  (JNIEnv *, jclass, jlong, jint, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XSynchronize
 * Signature: (JZ)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_X11_XlibWrapper_XSynchronize
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XNextSecondaryLoopEvent
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_X11_XlibWrapper_XNextSecondaryLoopEvent
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    ExitSecondaryLoop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_ExitSecondaryLoop
  (JNIEnv *, jclass);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XTextPropertyToStringList
 * Signature: ([BJ)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_sun_awt_X11_XlibWrapper_XTextPropertyToStringList
  (JNIEnv *, jclass, jbyteArray, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    XShapeQueryExtension
 * Signature: (JJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_X11_XlibWrapper_XShapeQueryExtension
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    SetRectangularShape
 * Signature: (JJIIIILsun/java2d/pipe/Region;)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_SetRectangularShape
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    SetBitmapShape
 * Signature: (JJII[I)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_SetBitmapShape
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jintArray);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    SetZOrder
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_SetZOrder
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_awt_X11_XlibWrapper
 * Method:    PrintXErrorEvent
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_X11_XlibWrapper_PrintXErrorEvent
  (JNIEnv *, jclass, jlong, jlong);

#ifdef __cplusplus
}
#endif
#endif
